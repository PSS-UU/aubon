name: Deploy

on:
  push:
    branches: ["feat/web-production-docker"]
  # workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create deployment artifact
        run: tar -czf "${{ github.sha }}".tar.gz --exclude=.git* --exclude=app --exclude=web* .??*
      - name: Copy tar file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          passphrase: ${{ secrets.SERVER_PASSWORD }}
          source: ${{ github.sha }}.tar.gz
          target: /var/www/aubon/releases/${{ github.sha }}
      - name: Start docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          passphrase: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /var/www/aubon/releases/${{ github.sha }}
            tar xzf "${{ github.sha }}".tar.gz
            rm "${{ github.sha }}".tar.gz
            cd /var/www/aubon
            ln -sfn releases/${{ github.sha }} current
            cd current
            docker-compose -p aubon -f docker-compose.yml -f docker-compose.prod.yml up -d --build
            docker exec aubon-backend-prod db-migrate up -e prod
  deploy-frontend:
    name: Deploy Frontend to server
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create environment file
        run: |
        echo \
        "export const environment = {
          production: true,
          path_to_aurora_overlay: '${{ secrets.SERVER_HOST }}/latest.png',
          url: '${{ secrets.SERVER_HOST }}',
          token: '${{ secrets.FRONTEND_ENV_MAP_TOKEN }}'
        }" \
        > web/client/src/environments/environment.prod.ts
      - name: Npm install
        run: cd web/client && npm install
      - name: Build angular application
        run: npx ng build
      - name: Copy builded files to server with rsync
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete
          path: web/client/dist
          remote_path: /var/www/aubon/web
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USERNAME }}
          remote_key: ${{ secrets.SERVER_PRIVATE_KEY }}
          remote_key_pass: ${{ secrets.SERVER_PASSWORD }}
